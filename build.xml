<?xml version="1.0" encoding="UTF-8"?>
<!-- Вы можете свободно редактировать этот файл. См. блоки с комментариями ниже для -->
<!-- несколько примеров настройки сборки. -->
<!-- (Если вы удалите его и снова откроете проект, он будет создан заново.) -->
<!-- По умолчанию этот сценарий сборки используется только командами «Очистить» и «Сборка». -->
<!-- Такие команды, как «Выполнить», «Отладка» и «Тест», используют этот сценарий сборки только в том случае, если -->
<!-- функция компиляции при сохранении для проекта отключена. -->
<!-- Вы можете отключить настройку «Компиляция при сохранении» (или «Развертывание при сохранении») -->
<!-- в диалоговом окне «Свойства проекта».-->
<project name="RapidRotary" default="default" basedir=".">
    <description>Собирает, тестирует и запускает проект RapidRotary.</description>
    <import file="nbproject/build-impl.xml"/>
    <!--

    Существует несколько целей, которые по умолчанию пусты и которые можно
    используется для выполнения ваших задач. Эти цели обычно выполняются
    до и после некоторых основных целей. Они есть:

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products

    (Цели, начинающиеся с «-», не предназначены для самостоятельного вызова.)

    Пример вставки обфускатора после компиляции может выглядеть так:

        <target name="-post-compile">
            <obfuscate>
                <fileset dir="${build.classes.dir}"/>
            </obfuscate>
        </target>

    Чтобы просмотреть список доступных свойств, проверьте импортированный
    файл nbproject/build-impl.xml.


    Другой способ настроить сборку — переопределить существующие основные цели.
    Цели, представляющие интерес:
	
      -init-macrodef-javac:     определяет макрос для компиляции Javac
      -init-macrodef-junit:     определяет макрос для выполнения junit
      -init-macrodef-debug:     определяет макрос для отладки классов
      -init-macrodef-java:      определяет макрос для выполнения класса
      -do-jar:                  Сборка JAR
      run:                      выполнение проекта 
      -javadoc-build:           Генерация Javadoc
      test-report:              Генерация отчетов JUnit

    Пример переопределения цели выполнения проекта может выглядеть так:

        <target name="run" depends="RapidRotary-impl.jar">
            <exec dir="bin" executable="launcher.exe">
                <arg file="${dist.jar}"/>
            </exec>
        </target>

    Обратите внимание, что переопределенная цель зависит от цели jar, а не только от
    цель компиляции, как и обычная цель запуска. И снова список доступных
    свойства, которые вы можете использовать, проверьте цель, которую вы переопределяете, в
    файл nbproject/build-impl.xml. 

    -->
</project>
